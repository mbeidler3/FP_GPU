#!/bin/bash

_error() {

  local readonly msg="$1"

  echo "."
  echo "."
  echo "launchkit >> [Error] << ${msg}"
  echo "."
  echo "."

  return 1
}

_error_fatal() {

  local readonly msg="$1"

  echo "."
  echo "."
  echo "launchkit >> [Fatal Error] << ${msg}"
  echo "."
  echo "."

  exit 1
}

_platform_mattlaptop_match() {

  [[ $(uname -n) =~ MBP115573 ]] || return 1
}

_platform_mattlaptop_setup() {
  export CC=/usr/local/bin/gcc-13
  export CXX=/usr/local/bin/g++-13
  export FC=/usr/local/bin/gfortran-13
}

_platform_perlmutter_match() {

  [[ $LMOD_SYSTEM_NAME =~ perlmutter ]] || return 1
}


_platform_perlmutter_setup() {

  module load cmake
  module load nvidia
}

_scenario_gpu_trial1_mattlaptop_build() {

  BUILD_TYPE=Debug
 
  echo cmake configured to generate a $BUILD_TYPE build.

  rm -f CMakeCache.txt
  rm -rf CMakeFiles

  rm ./src/*.mod

  rm -rf ./build
  mkdir ./build && cd $_

  cmake \
      -DCMAKE_Fortran_FLAGS="-O3 -fopenmp -fallow-argument-mismatch -malign-double" \
      -DCMAKE_Fortran_FLAGS_DEBUG="-g -ffpe-trap=invalid,zero,overflow -fbacktrace" \
    ..

  [[ $? -eq 0 ]] && make VERBOSE=1

  LAUNCHKIT_RUNTIME_PATH_EXE="$(pwd -P)/build/bin/xfpgpu"
  cd - >/dev/null
}


_scenario_gpu_trial1_mattlaptop_run() {

  echo
}


_scenario_gpu_trial1_perlmutter_build() {

  BUILD_TYPE=Debug
  HARDWARE_TYPE=CPU
 
  echo cmake configured to generate a $BUILD_TYPE build.

  rm -f CMakeCache.txt
  rm -rf CMakeFiles

  rm ./src/*.mod

  rm -rf ./build
  mkdir ./build && cd $_

  if [ "$HARDWARE_TYPE" == CPU ]
  then
    cmake \
        -DCMAKE_BUILD_TYPE:String=$BUILD_TYPE \
        -DCMAKE_Fortran_FLAGS="-Mfree -Mpreprocess -r8 -fPIC -O3 -mp -cuda -cudalib=curand" \
        -DCMAKE_Fortran_FLAGS_DEBUG="-g -Minfo=all -Minstrument -traceback -lnvhpcwrapnvtx" \
      ..
  elif [ "$HARDWARE_TYPE" == GPU ]
  then
    cmake \
        -DCMAKE_BUILD_TYPE:String=$BUILD_TYPE \
        -DUSE_ACC=ON \
        -DCMAKE_Fortran_FLAGS="-fast -acc=gpu -gpu=cc80 -cudalib=curand -Mfree -fPIC -O3 -Mpreprocess" \
        -DCMAKE_Fortran_FLAGS_DEBUG="-g -Minfo=all -Minstrument -traceback -lnvhpcwrapnvtx" \
      ..
  else
    echo " choose a valid hardware type "
  fi

  [[ $? -eq 0 ]] && make VERBOSE=1

  LAUNCHKIT_RUNTIME_PATH_EXE="$(pwd -P)/build/bin/xfpgpu"
  cd - >/dev/null
}


__platform_match() {

  local match_count=0

  [[ -n $LAUNCHKIT_PLATFORM ]] && return

  _platform_perlmutter_match && let "match_count+=1" && LAUNCHKIT_PLATFORM="perlmutter"
  _platform_mattlaptop_match && let "match_count+=1" && LAUNCHKIT_PLATFORM="mattlaptop"

  [[ ${match_count} -eq 1 ]] || _error_fatal "unable to select platform"
}


__platform_setup() {

  local readonly platform="$LAUNCHKIT_PLATFORM"

  _platform_${platform}_setup
}


__build() {

  local readonly platform="$LAUNCHKIT_PLATFORM"

  _scenario_gpu_trial1_${platform}_build &> compiler_report.txt
}


LAUNCHKIT_RUNTIME_PATH_EXE=""
LAUNCHKIT_PLATFORM=""


__platform_match
__platform_setup

__build



